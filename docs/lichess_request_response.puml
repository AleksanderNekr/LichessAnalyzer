@startuml Basic Request-Response Sequence
'https://plantuml.com/sequence-diagram

autonumber

' actors: Пользователь, Клиентское приложение, Бэкенд-приложение, Lichess API
' сценарий: пользователь желает отобразить список шахматистов, клиентское приложение запрашивает список у бэкенда, бэкенд запрашивает список у Lichess API, Lichess API возвращает список, бэкенд обрабатывает данные и возвращает список клиентскому приложению, клиентское приложение отображает список пользователю

actor Пользователь as user
participant "Клиентское приложение" as client
participant "Бэкенд-приложение" as backend
participant "Lichess API" as lichess

user -> client: получить данные
activate client

client -> backend: отправка HTTP запроса
activate backend

backend -> lichess: отправка HTTP запроса
activate lichess
lichess --> backend: возврат HTTP ответа\nс данными
deactivate lichess

alt ответ успешен
    backend -> backend: обработка и\nподготовка данных
    backend --> client: возврат HTTP ответа\nс данными
    
    client --> user: отображение\nданных
else ответ не успешен
    backend --> client: возврат HTTP ответа\nс ошибкой
    deactivate backend
    
    client --> user: отображение\nсообщения\nс ошибкой
    deactivate client
end


@enduml

@startuml Request-Response with Cache, retries and 429 check Sequence

autonumber

actor Пользователь as user
participant "Клиентское приложение" as client
database "Кэш" as cache
participant "Бэкенд-приложение" as backend
participant "Lichess API" as lichess

user -> client: получить данные
activate client

client -> cache: получить данные
activate cache
cache --> client: данные
deactivate cache

opt поиск по кэшу не дал результатов
    client -> backend: HTTP запрос
    activate backend
    
    backend -> lichess: отправка HTTP запроса
    activate lichess
    
    lichess --> backend: возврат HTTP ответа
    deactivate lichess
    
    loop ответ от Lichess 429 или 5ХХ
        backend --> client: сообщение\nо необходимости ожидания
        client --> user: сообщение о недоступности\nсервиса Lichess и таймером ожидания
    
        backend -> backend: ожидание перед\nповторной попыткой
        
        backend -> lichess: отправка HTTP запроса
        activate lichess
    
        lichess --> backend: возврат HTTP ответа
        deactivate lichess
    end
    opt получены данные
        backend -> backend: обработка данных
    
        backend --> cache: обновление
        activate cache
        deactivate cache
    end
    
    backend --> client: возврат HTTP ответа
    deactivate backend
end
    
client --> user: отображение данных или\nкода ответа с сообщением
deactivate client

@enduml
